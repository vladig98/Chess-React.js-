{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\Chess-React.js-\\\\src\\\\Square.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  getPossibleMoves,\n  x,\n  y,\n  piece,\n  color,\n  selectedSquareX,\n  setSelectedSquareX,\n  selectedSquareY,\n  setSelectedSquareY,\n  possibleMoves,\n  updatePossibleMoves,\n  movePiece,\n  getPossibleMovesForPiece\n}) {\n  function handleClick() {\n    // console.log(`Square object`, possibleMoves.current)\n    // if (possibleMoves.current.some(m => m.piece.props.x == x && m.piece.props.y == y)) {\n    //     movePiece(x, y)\n    // } else {\n    //     if (selectedSquareX == x && selectedSquareY == y) {\n    //         setSelectedSquareX(\"\")\n    //         setSelectedSquareY(\"\")\n    //         updatePossibleMoves([])\n    //     } else {\n    //         setSelectedSquareX(x)\n    //         setSelectedSquareY(y)\n    //         getPossibleMoves()\n    //     }\n    // }\n\n    console.log(`Square object`, possibleMoves.current);\n    const clickedSquare = possibleMoves.current.find(m => m.piece.props.x === x && m.piece.props.y === y);\n    if (clickedSquare) {\n      movePiece(x, y);\n    } else {\n      if (selectedSquareX === x && selectedSquareY === y) {\n        setSelectedSquareX(\"\");\n        setSelectedSquareY(\"\");\n        updatePossibleMoves([]);\n      } else {\n        setSelectedSquareX(x);\n        setSelectedSquareY(y);\n        const square = {\n          x,\n          y,\n          piece\n        };\n        const moves = getPossibleMovesForPiece(square); // new function to get possible moves for a specific piece\n        updatePossibleMoves([{\n          piece: square,\n          moves\n        }]);\n      }\n    }\n  }\n  let styles = ['chessSquare', 'piece'];\n  styles.push(color);\n  styles.push(piece);\n  if (possibleMoves.current.some(move => move.moves.some(m => m.props.x === x && m.props.y === y))) {\n    styles.push(\"possibleMove\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      className: styles.filter(Boolean).join(\" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Square;\nexport default Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","getPossibleMoves","x","y","piece","color","selectedSquareX","setSelectedSquareX","selectedSquareY","setSelectedSquareY","possibleMoves","updatePossibleMoves","movePiece","getPossibleMovesForPiece","handleClick","console","log","current","clickedSquare","find","m","props","square","moves","styles","push","some","move","children","onClick","className","filter","Boolean","join","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/Chess-React.js-/src/Square.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Square({\r\n    getPossibleMoves,\r\n    x,\r\n    y,\r\n    piece,\r\n    color,\r\n    selectedSquareX,\r\n    setSelectedSquareX,\r\n    selectedSquareY,\r\n    setSelectedSquareY,\r\n    possibleMoves,\r\n    updatePossibleMoves,\r\n    movePiece,\r\n    getPossibleMovesForPiece\r\n}) {\r\n\r\n    function handleClick() {\r\n        // console.log(`Square object`, possibleMoves.current)\r\n        // if (possibleMoves.current.some(m => m.piece.props.x == x && m.piece.props.y == y)) {\r\n        //     movePiece(x, y)\r\n        // } else {\r\n        //     if (selectedSquareX == x && selectedSquareY == y) {\r\n        //         setSelectedSquareX(\"\")\r\n        //         setSelectedSquareY(\"\")\r\n        //         updatePossibleMoves([])\r\n        //     } else {\r\n        //         setSelectedSquareX(x)\r\n        //         setSelectedSquareY(y)\r\n        //         getPossibleMoves()\r\n        //     }\r\n        // }\r\n\r\n        console.log(`Square object`, possibleMoves.current)\r\n        const clickedSquare = possibleMoves.current.find(m => m.piece.props.x === x && m.piece.props.y === y);\r\n\r\n        if (clickedSquare) {\r\n            movePiece(x, y);\r\n        } else {\r\n            if (selectedSquareX === x && selectedSquareY === y) {\r\n                setSelectedSquareX(\"\");\r\n                setSelectedSquareY(\"\");\r\n                updatePossibleMoves([]);\r\n            } else {\r\n                setSelectedSquareX(x);\r\n                setSelectedSquareY(y);\r\n                const square = { x, y, piece };\r\n                const moves = getPossibleMovesForPiece(square); // new function to get possible moves for a specific piece\r\n                updatePossibleMoves([{ piece: square, moves }]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let styles = ['chessSquare', 'piece'];\r\n    styles.push(color);\r\n    styles.push(piece);\r\n\r\n    if (possibleMoves.current.some(move => move.moves.some(m => m.props.x === x && m.props.y === y))) {\r\n        styles.push(\"possibleMove\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div onClick={handleClick} className={styles.filter(Boolean).join(\" \")}>\r\n                {/* <span className='coordinates'>{x}-{y}</span> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Square"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,MAAMA,CAAC;EACZC,gBAAgB;EAChBC,CAAC;EACDC,CAAC;EACDC,KAAK;EACLC,KAAK;EACLC,eAAe;EACfC,kBAAkB;EAClBC,eAAe;EACfC,kBAAkB;EAClBC,aAAa;EACbC,mBAAmB;EACnBC,SAAS;EACTC;AACJ,CAAC,EAAE;EAEC,SAASC,WAAWA,CAAA,EAAG;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,OAAO,CAACC,GAAG,CAAE,eAAc,EAAEN,aAAa,CAACO,OAAO,CAAC;IACnD,MAAMC,aAAa,GAAGR,aAAa,CAACO,OAAO,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,KAAK,CAACiB,KAAK,CAACnB,CAAC,KAAKA,CAAC,IAAIkB,CAAC,CAAChB,KAAK,CAACiB,KAAK,CAAClB,CAAC,KAAKA,CAAC,CAAC;IAErG,IAAIe,aAAa,EAAE;MACfN,SAAS,CAACV,CAAC,EAAEC,CAAC,CAAC;IACnB,CAAC,MAAM;MACH,IAAIG,eAAe,KAAKJ,CAAC,IAAIM,eAAe,KAAKL,CAAC,EAAE;QAChDI,kBAAkB,CAAC,EAAE,CAAC;QACtBE,kBAAkB,CAAC,EAAE,CAAC;QACtBE,mBAAmB,CAAC,EAAE,CAAC;MAC3B,CAAC,MAAM;QACHJ,kBAAkB,CAACL,CAAC,CAAC;QACrBO,kBAAkB,CAACN,CAAC,CAAC;QACrB,MAAMmB,MAAM,GAAG;UAAEpB,CAAC;UAAEC,CAAC;UAAEC;QAAM,CAAC;QAC9B,MAAMmB,KAAK,GAAGV,wBAAwB,CAACS,MAAM,CAAC,CAAC,CAAC;QAChDX,mBAAmB,CAAC,CAAC;UAAEP,KAAK,EAAEkB,MAAM;UAAEC;QAAM,CAAC,CAAC,CAAC;MACnD;IACJ;EACJ;EAEA,IAAIC,MAAM,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;EACrCA,MAAM,CAACC,IAAI,CAACpB,KAAK,CAAC;EAClBmB,MAAM,CAACC,IAAI,CAACrB,KAAK,CAAC;EAElB,IAAIM,aAAa,CAACO,OAAO,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,KAAK,CAACG,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACC,KAAK,CAACnB,CAAC,KAAKA,CAAC,IAAIkB,CAAC,CAACC,KAAK,CAAClB,CAAC,KAAKA,CAAC,CAAC,CAAC,EAAE;IAC9FqB,MAAM,CAACC,IAAI,CAAC,cAAc,CAAC;EAC/B;EAEA,oBACI5B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACI/B,OAAA;MAAKgC,OAAO,EAAEf,WAAY;MAACgB,SAAS,EAAEN,MAAM,CAACO,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElE;EAAC,gBACR,CAAC;AAEX;AAACC,EAAA,GAnEQtC,MAAM;AAqEf,eAAeA,MAAM;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}