{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vladi Gotsin\\\\Desktop\\\\react\\\\Chess-React.js-\\\\src\\\\Square.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Square({\n  // getPossibleMoves,\n  // x,\n  // y,\n  // piece,\n  // color,\n  // selectedSquareX,\n  // setSelectedSquareX,\n  // selectedSquareY,\n  // setSelectedSquareY,\n  // possibleMoves,\n  // updatePossibleMoves,\n  // movePiece\n  x,\n  y,\n  piece,\n  color,\n  fen,\n  setFen,\n  boardPosition,\n  setBoardPosition,\n  nextTurn,\n  setNextTurn,\n  WCastleK,\n  setWCastleK,\n  WCastleQ,\n  setWCastleQ,\n  BCastleK,\n  setBCastleK,\n  BCastleQ,\n  setBCastleQ,\n  enPassant,\n  setEnPassant,\n  halfMoves,\n  setHalfMoves,\n  fullMoves,\n  setFullMoves,\n  boardSquare,\n  setBoardSquare,\n  possibleMoves,\n  setPossibleMoves,\n  selectedSquareX,\n  setSelectedSquareX,\n  selectedSquareY,\n  setSelectedSquareY,\n  canWhiteShortCastle,\n  setCanWhiteShortCastle,\n  canWhiteLongCastle,\n  setCanWhiteLongCastle,\n  canBlackShortCastle,\n  setCanBlackShortCastle,\n  canBlackLongCastle,\n  setCanBlackLongCastle,\n  enPassantPossible,\n  setEnPassantPossible,\n  enPassantX,\n  setEnPassantX,\n  enPassantY,\n  setEnPassantY,\n  isWhiteToMove,\n  setIsWhiteToMove,\n  fenParser,\n  isWhiteInCheck,\n  isBlackInCheck,\n  movePiece,\n  updatePossibleMoves,\n  updateSelectedSquareX,\n  updateSelectedSquareY,\n  getATargetSquareByLocation,\n  getATargetSquareByPiece,\n  isSquareAvailable,\n  isPawnOnStartingSquare,\n  areSameColor,\n  doesTheSquareHasThePiece,\n  isPawnOnEnPassantSquare,\n  isColorWhite,\n  isColorBlack,\n  checkIfCanWhiteLongCastle,\n  checkIfCanWhiteShortCastle,\n  checkIfCanBlackLongCastle,\n  checkIfCanBlackShortCastle,\n  convertCoordinatesToLocation,\n  getPawnsPossibleMoves,\n  getRooksPossibleMoves,\n  getBishopPossibleMoves,\n  getKnightPossibleMoves,\n  getKingPossibleMoves,\n  getQueenPossibleMoves,\n  getPieceColor,\n  getPiece,\n  filterMovesIfInCheck,\n  filterMovesThatAllowIllegalCastling,\n  removeEmptyMoves,\n  getPossibleMoves\n}) {\n  function handleClick() {\n    console.log(x, y, 'Clicked');\n    if (possibleMoves.some(m => m.piece.props.x == x && m.piece.props.y == y)) {\n      console.log('Moving');\n      movePiece(x, y);\n    } else {\n      if (selectedSquareX == x && selectedSquareY == y) {\n        console.log('Clicked the same square');\n        setSelectedSquareX(\"\");\n        setSelectedSquareY(\"\");\n        updatePossibleMoves([]);\n      } else {\n        console.log('Get possible moves from square');\n        setSelectedSquareX(x);\n        setSelectedSquareY(y);\n        getPossibleMoves(x, y);\n      }\n    }\n  }\n  let styles = ['chessSquare', 'piece'];\n  styles.push(color);\n  styles.push(piece);\n  if (possibleMoves.some(move => move.x === x && move.y === y)) {\n    styles.push(\"possibleMove\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      className: styles.filter(Boolean).join(\" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","x","y","piece","color","fen","setFen","boardPosition","setBoardPosition","nextTurn","setNextTurn","WCastleK","setWCastleK","WCastleQ","setWCastleQ","BCastleK","setBCastleK","BCastleQ","setBCastleQ","enPassant","setEnPassant","halfMoves","setHalfMoves","fullMoves","setFullMoves","boardSquare","setBoardSquare","possibleMoves","setPossibleMoves","selectedSquareX","setSelectedSquareX","selectedSquareY","setSelectedSquareY","canWhiteShortCastle","setCanWhiteShortCastle","canWhiteLongCastle","setCanWhiteLongCastle","canBlackShortCastle","setCanBlackShortCastle","canBlackLongCastle","setCanBlackLongCastle","enPassantPossible","setEnPassantPossible","enPassantX","setEnPassantX","enPassantY","setEnPassantY","isWhiteToMove","setIsWhiteToMove","fenParser","isWhiteInCheck","isBlackInCheck","movePiece","updatePossibleMoves","updateSelectedSquareX","updateSelectedSquareY","getATargetSquareByLocation","getATargetSquareByPiece","isSquareAvailable","isPawnOnStartingSquare","areSameColor","doesTheSquareHasThePiece","isPawnOnEnPassantSquare","isColorWhite","isColorBlack","checkIfCanWhiteLongCastle","checkIfCanWhiteShortCastle","checkIfCanBlackLongCastle","checkIfCanBlackShortCastle","convertCoordinatesToLocation","getPawnsPossibleMoves","getRooksPossibleMoves","getBishopPossibleMoves","getKnightPossibleMoves","getKingPossibleMoves","getQueenPossibleMoves","getPieceColor","getPiece","filterMovesIfInCheck","filterMovesThatAllowIllegalCastling","removeEmptyMoves","getPossibleMoves","handleClick","console","log","some","m","props","styles","push","move","children","onClick","className","filter","Boolean","join","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vladi Gotsin/Desktop/react/Chess-React.js-/src/Square.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport function Square({\r\n    // getPossibleMoves,\r\n    // x,\r\n    // y,\r\n    // piece,\r\n    // color,\r\n    // selectedSquareX,\r\n    // setSelectedSquareX,\r\n    // selectedSquareY,\r\n    // setSelectedSquareY,\r\n    // possibleMoves,\r\n    // updatePossibleMoves,\r\n    // movePiece\r\n    x, y, piece, color,\r\n    fen, setFen,\r\n    boardPosition, setBoardPosition,\r\n    nextTurn, setNextTurn,\r\n    WCastleK, setWCastleK,\r\n    WCastleQ, setWCastleQ,\r\n    BCastleK, setBCastleK,\r\n    BCastleQ, setBCastleQ,\r\n    enPassant, setEnPassant,\r\n    halfMoves, setHalfMoves,\r\n    fullMoves, setFullMoves,\r\n    boardSquare, setBoardSquare,\r\n    possibleMoves, setPossibleMoves,\r\n    selectedSquareX, setSelectedSquareX,\r\n    selectedSquareY, setSelectedSquareY,\r\n    canWhiteShortCastle, setCanWhiteShortCastle,\r\n    canWhiteLongCastle, setCanWhiteLongCastle,\r\n    canBlackShortCastle, setCanBlackShortCastle,\r\n    canBlackLongCastle, setCanBlackLongCastle,\r\n    enPassantPossible, setEnPassantPossible,\r\n    enPassantX, setEnPassantX,\r\n    enPassantY, setEnPassantY,\r\n    isWhiteToMove, setIsWhiteToMove,\r\n    fenParser, isWhiteInCheck, isBlackInCheck,\r\n    movePiece, updatePossibleMoves,\r\n    updateSelectedSquareX, updateSelectedSquareY,\r\n    getATargetSquareByLocation, getATargetSquareByPiece,\r\n    isSquareAvailable, isPawnOnStartingSquare,\r\n    areSameColor, doesTheSquareHasThePiece,\r\n    isPawnOnEnPassantSquare, isColorWhite, isColorBlack,\r\n    checkIfCanWhiteLongCastle, checkIfCanWhiteShortCastle,\r\n    checkIfCanBlackLongCastle, checkIfCanBlackShortCastle,\r\n    convertCoordinatesToLocation, getPawnsPossibleMoves,\r\n    getRooksPossibleMoves, getBishopPossibleMoves,\r\n    getKnightPossibleMoves, getKingPossibleMoves,\r\n    getQueenPossibleMoves, getPieceColor, getPiece,\r\n    filterMovesIfInCheck, filterMovesThatAllowIllegalCastling,\r\n    removeEmptyMoves, getPossibleMoves\r\n}) {\r\n\r\n    function handleClick() {\r\n        console.log(x, y, 'Clicked')\r\n        if (possibleMoves.some(m => m.piece.props.x == x && m.piece.props.y == y)) {\r\n            console.log('Moving')\r\n            movePiece(x, y)\r\n        } else {\r\n            if (selectedSquareX == x && selectedSquareY == y) {\r\n                console.log('Clicked the same square')\r\n                setSelectedSquareX(\"\")\r\n                setSelectedSquareY(\"\")\r\n                updatePossibleMoves([])\r\n            } else {\r\n                console.log('Get possible moves from square')\r\n                setSelectedSquareX(x)\r\n                setSelectedSquareY(y)\r\n                getPossibleMoves(x, y)\r\n            }\r\n        }\r\n    }\r\n\r\n    let styles = ['chessSquare', 'piece'];\r\n    styles.push(color);\r\n    styles.push(piece);\r\n\r\n    if (possibleMoves.some(move => move.x === x && move.y === y)) {\r\n        styles.push(\"possibleMove\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div onClick={handleClick} className={styles.filter(Boolean).join(\" \")}></div>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,OAAO,SAASC,MAAMA,CAAC;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,CAAC;EAAEC,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAClBC,GAAG;EAAEC,MAAM;EACXC,aAAa;EAAEC,gBAAgB;EAC/BC,QAAQ;EAAEC,WAAW;EACrBC,QAAQ;EAAEC,WAAW;EACrBC,QAAQ;EAAEC,WAAW;EACrBC,QAAQ;EAAEC,WAAW;EACrBC,QAAQ;EAAEC,WAAW;EACrBC,SAAS;EAAEC,YAAY;EACvBC,SAAS;EAAEC,YAAY;EACvBC,SAAS;EAAEC,YAAY;EACvBC,WAAW;EAAEC,cAAc;EAC3BC,aAAa;EAAEC,gBAAgB;EAC/BC,eAAe;EAAEC,kBAAkB;EACnCC,eAAe;EAAEC,kBAAkB;EACnCC,mBAAmB;EAAEC,sBAAsB;EAC3CC,kBAAkB;EAAEC,qBAAqB;EACzCC,mBAAmB;EAAEC,sBAAsB;EAC3CC,kBAAkB;EAAEC,qBAAqB;EACzCC,iBAAiB;EAAEC,oBAAoB;EACvCC,UAAU;EAAEC,aAAa;EACzBC,UAAU;EAAEC,aAAa;EACzBC,aAAa;EAAEC,gBAAgB;EAC/BC,SAAS;EAAEC,cAAc;EAAEC,cAAc;EACzCC,SAAS;EAAEC,mBAAmB;EAC9BC,qBAAqB;EAAEC,qBAAqB;EAC5CC,0BAA0B;EAAEC,uBAAuB;EACnDC,iBAAiB;EAAEC,sBAAsB;EACzCC,YAAY;EAAEC,wBAAwB;EACtCC,uBAAuB;EAAEC,YAAY;EAAEC,YAAY;EACnDC,yBAAyB;EAAEC,0BAA0B;EACrDC,yBAAyB;EAAEC,0BAA0B;EACrDC,4BAA4B;EAAEC,qBAAqB;EACnDC,qBAAqB;EAAEC,sBAAsB;EAC7CC,sBAAsB;EAAEC,oBAAoB;EAC5CC,qBAAqB;EAAEC,aAAa;EAAEC,QAAQ;EAC9CC,oBAAoB;EAAEC,mCAAmC;EACzDC,gBAAgB;EAAEC;AACtB,CAAC,EAAE;EAEC,SAASC,WAAWA,CAAA,EAAG;IACnBC,OAAO,CAACC,GAAG,CAACnF,CAAC,EAAEC,CAAC,EAAE,SAAS,CAAC;IAC5B,IAAIyB,aAAa,CAAC0D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnF,KAAK,CAACoF,KAAK,CAACtF,CAAC,IAAIA,CAAC,IAAIqF,CAAC,CAACnF,KAAK,CAACoF,KAAK,CAACrF,CAAC,IAAIA,CAAC,CAAC,EAAE;MACvEiF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBhC,SAAS,CAACnD,CAAC,EAAEC,CAAC,CAAC;IACnB,CAAC,MAAM;MACH,IAAI2B,eAAe,IAAI5B,CAAC,IAAI8B,eAAe,IAAI7B,CAAC,EAAE;QAC9CiF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCtD,kBAAkB,CAAC,EAAE,CAAC;QACtBE,kBAAkB,CAAC,EAAE,CAAC;QACtBqB,mBAAmB,CAAC,EAAE,CAAC;MAC3B,CAAC,MAAM;QACH8B,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAC7CtD,kBAAkB,CAAC7B,CAAC,CAAC;QACrB+B,kBAAkB,CAAC9B,CAAC,CAAC;QACrB+E,gBAAgB,CAAChF,CAAC,EAAEC,CAAC,CAAC;MAC1B;IACJ;EACJ;EAEA,IAAIsF,MAAM,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;EACrCA,MAAM,CAACC,IAAI,CAACrF,KAAK,CAAC;EAClBoF,MAAM,CAACC,IAAI,CAACtF,KAAK,CAAC;EAElB,IAAIwB,aAAa,CAAC0D,IAAI,CAACK,IAAI,IAAIA,IAAI,CAACzF,CAAC,KAAKA,CAAC,IAAIyF,IAAI,CAACxF,CAAC,KAAKA,CAAC,CAAC,EAAE;IAC1DsF,MAAM,CAACC,IAAI,CAAC,cAAc,CAAC;EAC/B;EAEA,oBACI5F,OAAA,CAAAE,SAAA;IAAA4F,QAAA,eACI9F,OAAA;MAAK+F,OAAO,EAAEV,WAAY;MAACW,SAAS,EAAEL,MAAM,CAACM,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAChF,CAAC;AAEX;AAACC,EAAA,GAtFerG,MAAM;AAAA,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}